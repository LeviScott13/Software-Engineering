package prob1;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class StoreTest {

	Store store1 = new Store();
	Store store2 = new Store();
	Store store3 = new Store();
	Store store4 = new Store();
	Store store5 = new Store();
	
	@Test
	void testAddNoEmp() {
		//Test for no employees
		int value = 0;
		//Should equal 0
		assertEquals(value, store1.getNumEmps());
	}
	@Test
	void testAddOneEmp(){
		
		//Testing add 1 employee
		Employee e1 = new Employee("a", 5.0);
		int value = 1;
		store2.addEmp(e1);
		//Should equal 1
		assertEquals(value, store2.getNumEmps());
	}
	@Test
	void testAllEmployees(){
		
		//Testing all 20 employees are added
		Employee e1 = new Employee("a", 5.0);
		Employee e2 = new Employee("b", 5.0);
		Employee e3 = new Employee("c", 5.0);
		Employee e4 = new Employee("d", 5.0);
		Employee e5 = new Employee("e", 5.0);
		Employee e6 = new Employee("f", 5.0);
		Employee e7 = new Employee("g", 5.0);
		Employee e8 = new Employee("h", 5.0);
		Employee e9 = new Employee("i", 5.0);
		Employee e10 = new Employee("j", 5.0);
		Employee e11 = new Employee("k", 5.0);
		Employee e12 = new Employee("l", 5.0);
		Employee e13 = new Employee("m", 5.0);
		Employee e14 = new Employee("n", 5.0);
		Employee e15 = new Employee("o", 5.0);
		Employee e16 = new Employee("p", 5.0);
		Employee e17 = new Employee("q", 5.0);
		Employee e18 = new Employee("r", 5.0);
		Employee e19 = new Employee("s", 5.0);
		Employee e20 = new Employee("t", 5.0);

		int value = 20;
		
		store3.addEmp(e1);
		store3.addEmp(e2);
		store3.addEmp(e3);
		store3.addEmp(e4);
		store3.addEmp(e5);
		store3.addEmp(e6);
		store3.addEmp(e7);
		store3.addEmp(e8);
		store3.addEmp(e9);
		store3.addEmp(e10);
		store3.addEmp(e11);
		store3.addEmp(e12);
		store3.addEmp(e13);
		store3.addEmp(e14);
		store3.addEmp(e15);
		store3.addEmp(e16);
		store3.addEmp(e17);
		store3.addEmp(e18);
		store3.addEmp(e19);
		store3.addEmp(e20);
		
		//Should equal 20
		assertEquals(value, store3.getNumEmps());
	}
	@Test
	void testTooManyEmployees(){
		
		//Testing for more than 20 employees when added
		Employee e1 = new Employee("a", 5.0);
		Employee e2 = new Employee("b", 5.0);
		Employee e3 = new Employee("c", 5.0);
		Employee e4 = new Employee("d", 5.0);
		Employee e5 = new Employee("e", 5.0);
		Employee e6 = new Employee("f", 5.0);
		Employee e7 = new Employee("g", 5.0);
		Employee e8 = new Employee("h", 5.0);
		Employee e9 = new Employee("i", 5.0);
		Employee e10 = new Employee("j", 5.0);
		Employee e11 = new Employee("k", 5.0);
		Employee e12 = new Employee("l", 5.0);
		Employee e13 = new Employee("m", 5.0);
		Employee e14 = new Employee("n", 5.0);
		Employee e15 = new Employee("o", 5.0);
		Employee e16 = new Employee("p", 5.0);
		Employee e17 = new Employee("q", 5.0);
		Employee e18 = new Employee("r", 5.0);
		Employee e19 = new Employee("s", 5.0);
		Employee e20 = new Employee("t", 5.0);
		Employee e21 = new Employee("u", 5.0);
		Employee e22 = new Employee("v", 5.0);
		Employee e23 = new Employee("w", 5.0);
		Employee e24 = new Employee("x", 5.0);
		Employee e25 = new Employee("y", 5.0);
		Employee e26 = new Employee("z", 5.0);
		
		int value = 20;
		
		store4.addEmp(e1);
		store4.addEmp(e2);
		store4.addEmp(e3);
		store4.addEmp(e4);
		store4.addEmp(e5);
		store4.addEmp(e6);
		store4.addEmp(e7);
		store4.addEmp(e8);
		store4.addEmp(e9);
		store4.addEmp(e10);
		store4.addEmp(e11);
		store4.addEmp(e12);
		store4.addEmp(e13);
		store4.addEmp(e14);
		store4.addEmp(e15);
		store4.addEmp(e16);
		store4.addEmp(e17);
		store4.addEmp(e18);
		store4.addEmp(e19);
		store4.addEmp(e20);
		store4.addEmp(e21);
		store4.addEmp(e22);
		store4.addEmp(e23);
		store4.addEmp(e24);
		store4.addEmp(e25);
		store4.addEmp(e26);
		
		//Should still equal 20
		assertEquals(value, store4.getNumEmps());

	}
	@Test
	void testRemoveEmployee() {
		
		
		int remove = 2;
		int value = 0;
		store2.removeEmployee(remove);
		assertEquals(value, store2.getNumEmps());
	}
	@Test
	void testRemoveNullEmployee() {
		
		int remove = 0;
		int value = 0;
		
		store5.removeEmployee(remove);
		assertEquals(value, store5.getNumEmps());
	}	
}	
